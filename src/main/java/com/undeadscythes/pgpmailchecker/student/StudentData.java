/*
 * Copyright (C) 2014 UndeadScythes <udscythes@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.undeadscythes.pgpmailchecker.student;

import com.undeadscythes.ceremail.Mail;
import com.undeadscythes.pgpmailchecker.mail.MailCellRenderer;
import com.undeadscythes.pgpmailchecker.mail.MailData;
import com.undeadscythes.pgpmailchecker.mail.MailListModel;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author UndeadScythes <udscythes@gmail.com>
 */
public class StudentData extends JPanel {
    private static final long serialVersionUID = 1L;
    private final MailListModel mailListModel = new MailListModel();
    
    public StudentData() {
        initComponents();
    }
    
    public void load(Student student) {
        mailListModel.clear();
        mailListModel.addMail(student.getMail());
        if (student.mailCount() > 0) {
            mailList.setSelectedIndex(0);
            mailData.load(mailList.getSelectedValue());
        }
        regNoText.setText(student.getRegNo());
        nameText.setText(student.getFullName());
        emailText.setText(student.getEmail());
        programmeText.setText(student.getProgramme());
        scoreText.setText(student.getScore() + "/6");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        mailSplit = new JSplitPane();
        mailScroll = new JScrollPane();
        mailList = new JList<>();
        mailData = new MailData();
        nameText = new JTextField();
        emailText = new JTextField();
        programmeText = new JTextField();
        nameLabel = new JLabel();
        emailLabel = new JLabel();
        programmeLabel = new JLabel();
        regNoLabel = new JLabel();
        regNoText = new JTextField();
        miscText = new JTextField();
        scoreText = new JTextField();
        miscLabel = new JLabel();
        scoreLabel = new JLabel();

        setLayout(new GridBagLayout());

        mailSplit.setDividerLocation(150);

        mailList.setModel(mailListModel);
        mailList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        mailList.setCellRenderer(new MailCellRenderer());
        mailList.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent evt) {
                mailListValueChanged(evt);
            }
        });
        mailScroll.setViewportView(mailList);

        mailSplit.setLeftComponent(mailScroll);
        mailSplit.setRightComponent(mailData);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        add(mailSplit, gridBagConstraints);

        nameText.setEditable(false);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(nameText, gridBagConstraints);

        emailText.setEditable(false);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(emailText, gridBagConstraints);

        programmeText.setEditable(false);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(programmeText, gridBagConstraints);

        nameLabel.setText("Name:");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(nameLabel, gridBagConstraints);

        emailLabel.setText("Email:");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(emailLabel, gridBagConstraints);

        programmeLabel.setText("Programme:");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(programmeLabel, gridBagConstraints);

        regNoLabel.setText("Reg No:");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(regNoLabel, gridBagConstraints);

        regNoText.setEditable(false);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(regNoText, gridBagConstraints);

        miscText.setEditable(false);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(miscText, gridBagConstraints);

        scoreText.setEditable(false);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(scoreText, gridBagConstraints);

        miscLabel.setText("Misc:");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(miscLabel, gridBagConstraints);

        scoreLabel.setText("Score:");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(2, 2, 2, 2);
        add(scoreLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void mailListValueChanged(ListSelectionEvent evt) {//GEN-FIRST:event_mailListValueChanged
        mailData.load(mailList.getSelectedValue());
    }//GEN-LAST:event_mailListValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel emailLabel;
    private JTextField emailText;
    private MailData mailData;
    private JList<Mail> mailList;
    private JScrollPane mailScroll;
    private JSplitPane mailSplit;
    private JLabel miscLabel;
    private JTextField miscText;
    private JLabel nameLabel;
    private JTextField nameText;
    private JLabel programmeLabel;
    private JTextField programmeText;
    private JLabel regNoLabel;
    private JTextField regNoText;
    private JLabel scoreLabel;
    private JTextField scoreText;
    // End of variables declaration//GEN-END:variables
}
